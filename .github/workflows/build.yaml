name: Build
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Prepare build environment
      run: ./cicd/prepare_runner.sh
    - name: Build
      run: ./cicd/docker_brun.sh
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: Balloon${{ github.run_id }}${{ github.run_attempt }}
        release_name: Release ${{ github.sha }}
        body: |
          Contents of this release:
          * update.img - Update image for LuckyFox pico Board.
          * output.zip - Contents of output folder
        draft: true
        prerelease: false
    - name: Upload Release Asset update.img
      id: upload-release-asset-update
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./output/image/update.img
        asset_name: update.img
        asset_content_type: application/img
    - name: Upload Release Asset output.zip
      id: upload-release-asset-output
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./output.zip
        asset_name: output.zip
        asset_content_type: application/zip
    